# Generated by Django 3.2.7 on 2022-01-25 11:24

import chat.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.TimeField(auto_now_add=True)),
                ('edited', models.BooleanField(default=False)),
                ('pinned', models.BooleanField(default=False)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('avatar', models.FileField(blank=True, null=True, upload_to=chat.models.profileAvatar)),
                ('biograhpy', models.CharField(blank=True, max_length=100)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrivateMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messages', models.ManyToManyField(blank=True, null=True, to='chat.Message')),
                ('user_one', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to=settings.AUTH_USER_MODEL)),
                ('user_two', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupStructure',
            fields=[
                ('group_id', models.CharField(default=chat.models.GroupIdCreator, editable=False, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('link', models.CharField(default=chat.models.GroupLinkCreator, editable=False, max_length=100, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('avatar', models.ImageField(blank=True, max_length=500, null=True, upload_to=chat.models.GroupAvatr)),
                ('biograhpy', models.CharField(blank=True, max_length=400, null=True)),
                ('admins', models.ManyToManyField(blank=True, default=chat.models.currentUser, null=True, related_name='group_admins', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, default=chat.models.currentUser, null=True, related_name='group_members', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChannelStructure',
            fields=[
                ('channel_id', models.CharField(default=chat.models.ChannelIdCreator, editable=False, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('link', models.CharField(blank=True, default=chat.models.ChannelLinkCreator, max_length=100, null=True)),
                ('name', models.CharField(max_length=50)),
                ('avatar', models.FileField(blank=True, max_length=500, null=True, upload_to=chat.models.ChannelAvatr)),
                ('biograhpy', models.CharField(blank=True, max_length=400, null=True)),
                ('admins', models.ManyToManyField(blank=True, related_name='channel_admins', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, related_name='channel_members', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
